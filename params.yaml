# parameters for execution of the pipeline, handled by dvc
# execution of pipeline steps is dependant on these and data dependancy of the steps
#########################################################################

# S0 data extraction params
get_bacdive_ogt:
  n_jobs: 6                    # number of cores for parallel execution
  n_sample: null                 # number of "data" to sample down to for testing

# S1 data preparation params
get_protein_sequences:
  n_jobs: 6                    # number of cores for parallel execution
  n_sample: null                 # number of "data" to sample down to for testing
label_taxa:
  ogt_threshold: 40.0          # binary threshold to consider something as thermophilic
  ogt_determination_method: 'true ogt only'     # method of parsing raw bacdive outputs saved to csv
get_16s_blast_scores:
  n_jobs: 6                        # number of cpus to run in parallel
  word_size: 28                    # size of words for initial exact matching of nucleotides
  gapopen_penalty: 2               # cost to open a gap
  gapextend_penalty: 1             # cost to extend gap
  reward: 1                        # reward for nucleotide match
  penalty: -2                       # cost of nucleotide mismatch
  ungapped: false                  # whether to do ungapped alignment
  n_sample: null                     # number of thermophiles and mesophiles to sample for testing
  blast_metrics:
    - local_E_value
    - scaled_local_query_percent_id
    - scaled_local_symmetric_percent_id
    - local_gap_compressed_percent_id
    - local_average_coverage
label_all_pairs:
  blast_metric_thresholds:                  # define which metrics to use to label a taxa pair 
    scaled_local_symmetric_percent_id:    # metric name
      thresh: 0.88                            # float threshold
      greater: true                         # greater than threshold is good
    local_average_coverage:
      thresh: 0.75
      greater: true
get_protein_blast_scores:
  dask_cluster_class: 'SLURMCluster'
  max_protein_length: 350            # only consider proteins with length less than number
  method: 'blast'
  n_jobs: 8
  restart: false
  method_blast_params:
    num_threads: 6                        # number of cpus to run in parallel         
    word_size: 3                    # size of words for initial exact matching of nucleotides
    gapopen: 11               # cost to open a gap
    gapextend: 1             # cost to extend gap
    matrix: 'BLOSUM62'
    threshold: 11          # minumum score for word to be added to blast lookup table
    ungapped: false                  # whether to do ungapped alignment
  method_diamond_params:
    num_threads: 5
    sensitivity: 'sensitive'
    iterate: True                  # start with low sensitivity and only go lower towards target sensitivity for failure
    global_ranking: null           # hard limit on the number of Smith Waterman extensions that will be computed for each query.
    gapopen: 11
    gapextend: 1
    matrix: 'BLOSUM62'
  blast_metrics:
    - local_E_value
    - scaled_local_query_percent_id
    - scaled_local_symmetric_percent_id
    - local_gap_compressed_percent_id
